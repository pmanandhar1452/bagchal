%!PS-Adobe-2.0
%%Creator: dvipsk 5.86 p1.5d Copyright 1996-2001 ASCII Corp.(www-ptex@ascii.co.jp)
%%based on dvipsk 5.86 Copyright 1999 Radical Eye Software (www.radicaleye.com)
%%Title: Board.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o Board.ps Board.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.08.24:0912
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (Board.dvi)
@start
%DVIPSBitmapFont: Fa cmr8 8 11
/Fa 11 117 df<14FF010713E090381F80F090383E003849137C4913FC485A1203491378
153092C7FCA7157CB612FCA23803E000157CB3A5486C13FE3A7FFF0FFFE0A2232F7FAE27
> 12 D<13FF000713C0380F01F0381C00F8003F137C80A2143F001E7FC7FCA4EB07FF13
7F3801FE1FEA07F0EA1FC0EA3F80EA7F00127E00FE14065AA3143F7E007E137F007FEBEF
8C391F83C7FC390FFF03F83901FC01E01F207D9E23> 97 D<EA07C012FFA2120F1207AC
14FE9038C7FF809038CF03E09038DC01F09038F8007C49137E49133E497F1680A2150F16
C0A9ED1F80A216005D6D133E6D5B01B05B9038BC01F090380E07E0390607FF80260001FC
C7FC222F7EAD27> I<EB1FE0EB7FFC3801F01E3803E0073907C01F80EA0F80EA1F005A00
3EEB0F00007E90C7FCA2127C12FCA9127EA215C07E6C130101801380380FC0033907E007
003801F03E38007FF8EB1FC01A207E9E1F> I<EB1F80EBFFF03803E0783807C03E380F80
1E381F001FEC0F80123E007E130715C0127C12FCA3B6FCA200FCC8FCA5127EA2003E14C0
123F6C1301390F80038001C013003803E00F3801F03C38007FF8EB1FC01A207E9E1F>
101 D<013F13F89038FFC3FE3903E1FF1E3807807C000F140C391F003E00A2003E7FA76C
133EA26C6C5A00071378380FE1F0380CFFC0D81C3FC7FC90C8FCA3121E121F380FFFF814
FF6C14C04814F0391E0007F848130048147C12F848143CA46C147C007C14F86CEB01F06C
EB03E03907E01F803901FFFE0038003FF01F2D7E9D23> 103 D<EA0780EA0FC0EA1FE0A4
EA0FC0EA0780C7FCA8EA07C012FFA2120F1207B3A5EA0FE0EAFFFCA20E2E7EAD14> 105
D<EA07C012FFA2120F1207B3B3A3EA0FE0EAFFFEA20F2E7EAD14> 108
D<3807C0FE39FFC3FF809038C703E0390FDE01F0EA07F8496C7EA25BA25BB2486C487E3A
FFFE1FFFC0A2221E7E9D27> 110 D<3801FE183807FFB8381E01F8EA3C00481378481338
A21418A27E7EB41300EA7FF06CB4FC6C13C06C13F0000113F838001FFC130138C0007E14
3EA26C131EA27EA26C133CA26C137838FF01F038E3FFC000C0130017207E9E1C> 115
D<1360A413E0A312011203A21207121FB512F0A23803E000AF1418A714383801F0301470
3800F860EB3FE0EB0F80152A7FA81B> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr6 6 1
/Fb 1 50 df<13E01201120712FF12F91201B3A7487EB512C0A212217AA01E> 49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi10 10 4
/Fc 4 122 df<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A12
06120E5A5A5A12600A19798817> 59 D<133FEA1FFFA3C67E137EA313FE5BA312015BA3
12035BA31207EBE0FCEBE3FF9038E707C0390FFE03E09038F801F001F013F8EBE000485A
15FC5BA2123F90C7FCA214015A127EA2140312FE4814F8A2140715F05AEC0FE0A215C0EC
1F80143F00781400007C137E5C383C01F86C485A380F07C06CB4C7FCEA01FC1E3B7CB924
> 98 D<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038383F80
3A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2C7123F
A292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F81143801835C
00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907C003F0
29267EA42F> 120 D<13F8D803FE1470D8070F14F8000EEB8001121C1218003814030030
15F0EA701F1260013F130700E0010013E012C05BD8007E130F16C013FE5B151F00011580
5BA2153F000315005BA25D157EA315FE5D1401000113033800F80790387C1FF8EB3FF9EB
0FE1EB00035DA2000E1307D83F805B007F495AA24A5A92C7FCEB003E007C5B00705B6C48
5A381E07C06CB4C8FCEA01FC25367EA429> I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr7 7 1
/Fd 1 50 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521> 49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmti10 10 22
/Fe 22 122 df<EE3FFC4BB51280923907E007C092391F8001E0DB3F0013F0037E13034B
1307A24A5A18E04A48EB038094C7FCA314075DA4140F5DA3010FB7FCA25F903A001F8000
7EA217FE023F5C92C7FCA216015F5C147E16035FA214FE4A13075FA30101140F5F4AECC1
C0A2161F1783010316805CA2EF870013074A5CEE0F8EEE079EEE03FC010FEC00F04A91C7
FCA35C131FA2001C90CAFC127E5BEAFE3E133C137CEAF878EA78F0EA3FE0EA0F80344C82
BA2F> 12 D<1438147CA3147814F85CA20007140E390F80E03E01C0137E9038E1E1FE90
38F1C3F83903F9CFE03900FDDF8090387FBE00EB1FF8EB07E0495AEB3FF0EBFBFC3803F7
7E390FE73F80393F871FE038FF0F0F38FC0E0700F8130339E01E01C0000090C7FCA2133E
133C137CA313381F2470BD2A> 42 D<387FFFF8A2B5FCA214F0150579941E> 45
D<120EEA3F80127F12FFA31300127E123C0909778819> I<0107B612FCEFFF8018C0903B
000FF0001FF04BEB07F81703021F15FC17014B14FEA2023F1400A24B1301A2147F18FC92
C7120318F84A140718F04AEC0FE0EF1FC00101ED3F80EF7F004AEB01FEEE07F849B612E0
5F9139F80007F0EE01FC01076E7E177F4AEC3F80A2010F16C0171F5CA2131F173F5CA213
3FEF7F805C1800017F5D4C5A91C7485A5F49140FEE1FE0494A5A00014AB45AB748C7FC16
F816C037397BB83A> 66 D<14F8EB07FE90381F871C90383E03FE137CEBF80112014848
6C5A485A120FEBC001001F5CA2EA3F801403007F5C1300A21407485C5AA2140F5D48ECC1
C0A2141F15831680143F1587007C017F1300ECFF076C485B9038038F8E391F0F079E3907
FE03FC3901F000F0222677A42A> 97 D<133FEA1FFFA3C67E137EA313FE5BA312015BA3
12035BA31207EBE0F8EBE7FE9038EF0F80390FFC07C013F89038F003E013E0D81FC013F0
A21380A2123F1300A214075A127EA2140F12FE4814E0A2141F15C05AEC3F80A215005C14
7E5C387801F8007C5B383C03E0383E07C0381E1F80D80FFEC7FCEA01F01C3B77B926> I<
147F903803FFC090380FC1E090381F0070017E13784913383901F801F83803F003120713
E0120FD81FC013F091C7FC485AA2127F90C8FCA35A5AA45AA3153015381578007C14F000
7EEB01E0003EEB03C0EC0F806CEB3E00380F81F83803FFE0C690C7FC1D2677A426> I<ED
01F815FFA3150316F0A21507A216E0A2150FA216C0A2151FA21680A2153FA202F81300EB
07FE90381F877F90383E03FF017C5BEBF80112013803F00048485B120FEBC001121F5DEA
3F801403127F01005BA214075A485CA2140FA248ECC1C0A2141F15C3ED8380143F158700
7C017F1300ECFF076C485B9038038F8E391F0F079E3907FE03FC3901F000F0253B77B92A
> I<147F903803FFC090380FC1E090383F00F0017E13785B485A485A485A120F4913F800
1F14F0383F8001EC07E0EC1F80397F81FF00EBFFF891C7FC90C8FC5A5AA55AA21530007C
14381578007E14F0003EEB01E0EC03C06CEB0F806CEB3E00380781F83803FFE0C690C7FC
1D2677A426> I<ED07C0ED1FF0ED3E38ED7C3CEDF8FC15F9140115F1020313F8EDF0F016
0014075DA4140F5DA4141F5D010FB512C05B16809039003F800092C7FCA45C147EA414FE
5CA413015CA413035CA413075CA4130F5CA3131F5CA391C8FC5B121CEA7E3EA2EAFE3C13
7C1378EAF8F01278EA3FC0EA0F80264C82BA19> I<EB03F0EA01FFA3EA00075CA3130F5C
A3131F5CA3133F91C8FCA35B90387E07F0EC1FFCEC783E9038FFE01F02C01380EC800F14
00485A16C05B49EB1F8012035BA2153F000715005BA25D000F147E5B15FE5D121FD98001
131C15F8163C003F01031338010013F0A216704814E0007E15F016E0EDE1C000FE903801
E38048903800FF000038143C263B7BB92A> 104 D<EB01C0EB07E014F0130F14E01307EB
038090C7FCAB13F0EA03FCEA071EEA0E1F121CA212385B1270A25BEAF07E12E013FEC65A
A212015B1203A25B12075BA2000F13E013C013C1001F13C01381A2EB83801303EB0700A2
130E6C5AEA07F8EA01E0143879B619> I<EB0FC0EA07FFA3EA001F1480A2133FA21400A2
5BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA212
3FA290C7FCA25AA2EA7E0EA212FE131EEAFC1CA2133C133812F81378EA7870EA7CE0121F
EA0F80123B79B915> 108 D<D801E013FE3A07F803FF803A0E3C0F07C03A1E3E3C03E026
1C1F787F39383FF00114E0007813C000708114804A485AEAF07FEAE07EA20000140701FE
5C5BA2150F00015D5B151F5E12034990383F8380160316070007027F130049137EA2160E
000F147C49141E161C5E001FEC3C7849EB1FE00007C7EA0780292679A42F> 110
D<147F903803FFC090380FC1F090381F00F8017E137C5B4848137E4848133E0007143F5B
120F485AA2485A157F127F90C7FCA215FF5A4814FEA2140115FC5AEC03F8A2EC07F015E0
140F007C14C0007EEB1F80003EEB3F00147E6C13F8380F83F03803FFC0C648C7FC202677
A42A> I<9039078007C090391FE03FF090393CF0787C903938F8E03E9038787FC0017049
7EECFF00D9F0FE148013E05CEA01E113C15CA2D80003143FA25CA20107147FA24A1400A2
010F5C5E5C4B5A131F5EEC80035E013F495A6E485A5E6E48C7FC017F133EEC70FC90387E
3FF0EC0F8001FEC9FCA25BA21201A25BA21203A25B1207B512C0A3293580A42A> I<3903
C003F0390FF01FFC391E783C0F381C7C703A3C3EE03F8038383FC0EB7F80007815000070
1300151CD8F07E90C7FCEAE0FE5BA2120012015BA312035BA312075BA3120F5BA3121F5B
A3123F90C9FC120E212679A423> 114 D<14FE903807FF8090380F83C090383E00E04913
F00178137001F813F00001130313F0A215E00003EB01C06DC7FC7FEBFFC06C13F814FE6C
7F6D13807F010F13C01300143F141F140F123E127E00FE1480A348EB1F0012E06C133E00
705B6C5B381E03E06CB45AD801FEC7FC1C267AA422> I<EB0380EB07C0130FA4131F1480
A3133F1400A35B137E007FB5FCA2B6FC3800FC00A312015BA312035BA312075BA3120F5B
A3121FEB801CA2143C003F1338EB0078147014F014E0EB01C0EA3E03381F0780380F0F00
EA07FCEA01F0183579B31C> I<13F8D803FEEB01C0D8078FEB03E0390E0F8007121E121C
0038140F131F007815C01270013F131F00F0130000E015805BD8007E133FA201FE14005B
5D120149137EA215FE120349EBFC0EA20201131E161C15F813E0163CD9F0031338140700
01ECF07091381EF8F03A00F83C78E090393FF03FC090390FC00F00272679A42D> I<13F0
D803FCEB01C0D8071EEB03E0D80E1F1307121C123C0038140F4914C01270A249131FD8F0
7E148012E013FEC648133F160012015B5D0003147E5BA215FE00075C5BA214015DA31403
5D14070003130FEBF01F3901F87FE038007FF7EB1FC7EB000F5DA2141F003F5C48133F92
C7FC147E147C007E13FC387001F8EB03E06C485A383C1F80D80FFEC8FCEA03F0233679A4
28> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy10 10 7
/Ff 7 106 df<EB1FF0EBFFFE487F000714C04814E04814F04814F8A24814FCA3B612FE
A96C14FCA36C14F8A26C14F06C14E06C14C0000114006C5BEB1FF01F1F7BA42A> 15
D<007FB812F8B912FCA26C17F8CCFCAE007FB812F8B912FCA26C17F8CCFCAE007FB812F8
B912FCA26C17F836287BA841> 17 D<91381FFFFE91B6FC1303010F14FED91FF0C7FCEB
7F8001FEC8FCEA01F8485A485A485A5B48C9FCA2123EA25AA2127812F8A25AA2B712FE16
FFA216FE00F0C9FCA27EA21278127CA27EA27EA26C7E7F6C7E6C7E6C7EEA00FEEB7F80EB
1FF06DB512FE010314FF1300021F13FE283279AD37> 50 D<EC01F8140FEC3F80ECFC00
495A495A495AA2130F5CB3A7131F5C133F49C7FC13FEEA03F8EA7FE048C8FCEA7FE0EA03
F8EA00FE137F6D7E131F80130FB3A7801307A26D7E6D7E6D7EEC3F80EC0FF814011D537A
BD2A> 102 D<12FCEAFFC0EA07F0EA01FCEA007E7F80131F80130FB3A7801307806D7E6D
7EEB007EEC1FF0EC07F8EC1FF0EC7E00495A495A495A5C130F5CB3A7131F5C133F91C7FC
137E485AEA07F0EAFFC000FCC8FC1D537ABD2A> I<14C0EB01E01303A214C01307A21480
130FA2EB1F00A2131E133EA25BA2137813F8A2485AA25B1203A25B1207A2485AA290C7FC
5AA2123EA2123C127CA2127812F8A41278127CA2123C123EA27EA27E7FA26C7EA212037F
A212017FA26C7EA21378137CA27FA2131E131FA2EB0F80A2130714C0A2130314E0A21301
EB00C0135278BD20> I<126012F07EA21278127CA2123C123EA27EA27E7FA26C7EA21203
7FA26C7EA212007FA21378137CA27FA2131E131FA2EB0F80A2130714C0A2130314E0A414
C01307A21480130FA2EB1F00A2131E133EA25BA2137813F8A25B1201A2485AA25B1207A2
485AA290C7FC5AA2123EA2123C127CA2127812F8A25A126013527CBD20> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmbx12 14.4 17
/Fg 17 118 df<B712F0AB240B7F9F2D> 45 D<157815FC14031407141F14FF130F0007
B5FCB6FCA2147F13F0EAF800C7FCB3B3B3A6007FB712FEA52F4E76CD43> 49
D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C07F7F2703FE000F13F8D807F8
01037FD80FE06D7F48486D7F48488001F01680486C6E13C07F486C6E13E07FA27013F0A5
6C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13005F4C5A4B5B5F4B5B5F4B5B
4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A48EB01F04A5AEC3F804AC7FC
02FEEC03E0495A495A495A495AD91F80140749C8FC013E150F017FB7FC90B812C05A5A5A
5A5A5A5AB9FC1880A4344E79CD43> I<B812C0A5D8000701F8C7FCB3B3B3B2B812C0A52A
527CD132> 73 D<003FBC1280A59126C0003F9038C0007F49C71607D87FF8060113C001
E08449197F49193F90C8171FA2007E1A0FA3007C1A07A500FC1BE0481A03A6C994C7FCB3
B3AC91B912F0A553517BD05E> 84 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F7F
2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5AC9
FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B48
5B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C90
26C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E0010101E0
90C8FC3C387CB641> 97 D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEB
FFC092B612F002F301017F913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A
824A6E7FA2727EA285A28584A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B
6F495BDACFC04990C7FCDA87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01
FCC8FC90C7000313C041547BD24B> I<913801FFF8021FEBFF8091B612F0010315FC010F
9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F13
8091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C0
7E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390
B55A01001580023F49C7FC020113E033387CB63C> I<4DB47E0407B5FCA5EE001F1707B3
A4913801FFE0021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5
FC49487F4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA2
6C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF
6D90B5128F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B> I<913803FFC0023F
13FC49B6FC010715C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E
48178048497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6
127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F80
6D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F0
34387CB63D> I<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391F
E07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45C
B3ACB6D8F807B612C0A542537BD24B> 104 D<137F497E000313E0487FA2487FA76C5BA2
6C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325> I<D9
3FF0EB1FFCB591B512C0030314F0030F8092391FE07FFC92393F001FFE0003027C80C602
F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367B
B54B> 110 D<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000F
FED97FF86D6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F
7EA3007F1880A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D
4A5A6C6D495B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015
C0023F91C8FC020113E03A387CB643> I<90397FE003FEB590380FFF80033F13E04B13F0
9238FE1FF89139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC
5CEE1FF8EE0FF04A90C7FCA55CB3AAB612FCA52F367CB537> 114
D<143EA6147EA414FEA21301A313031307A2130F131F133F13FF5A000F90B6FCB8FCA426
003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F0015806DEBC03E6DEBF0FC6DEBFFF8
6D6C5B021F5B020313802A4D7ECB34> 116 D<D93FF8913801FFC0B50207B5FCA50003ED
001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01E313F06D6CD907C3EBFFC090
3A0FFFC03F836D90B51203010114FE6D6C13F8020701E091C7FC42377BB54B> I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmtt10 10 27
/Fh 27 122 df<010F133C90381F807EA8013F13FE4A5AA4007FB612F0B712F8A4003F15
F03A007E01F800A5EBFE0301FC5BA6003FB612F0B712F8A46C15F03A01F807E000A30003
130F01F05BA86C486C5A25337DB22C> 35 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F
80EA1F000B0B708A2C> 46 D<EC07F04A7E141F143FA2147EA214FCEB01F8A2EB03F0EB
07E0A2EB0FC0EB1F80A2EB3F00137EA25B485AA2485A5B1207485AA2485A48C7FCA2127E
5AB712FC16FEA36C15FCC8EAF800AA91387FFFF091B512F8A36E13F027347EB32C> 52
D<EC3FC0903801FFF801077F011F7F497F90387FE07F9039FF003F804848137FEA03F848
5A5B000FEC3F004848131E4990C7FC123F90C9FCA25A127EEB03FE90381FFF80D8FC7F13
E000FDB57EB67E9038FE07FC9038F001FE9038C0007F49EB3F8090C7121F16C048140F16
E01507A3127EA47E150F6D14C0001F141F6D1480000F143F6DEB7F003907F801FE3903FE
07FC6CB55A6C5C6D5B011F1380D907FCC7FC23357CB32C> 54 D<1507ED1F80153F15FF
14034A1300EC1FFC4A5AECFFE0491380010790C7FCEB0FFCEB3FF8EB7FE048485A4890C8
FCEA0FFEEA1FF8EA7FF0EAFFC05BA27FEA7FF0EA1FF8EA0FFEEA03FF6C13C06C6C7EEB3F
F8EB0FFC6DB4FC01017F6D13E0EC3FF86E7EEC07FF6E13801400153F151FED0700212A7B
AD2C> 60 D<127012FC7E6C7E13E06C7EEA1FFC6C7E3803FF80C67FEB7FF0EB1FF8EB0F
FEEB03FF6D13C06D6C7EEC3FF8EC0FFC6EB4FC0201138080A25C02071300EC0FFCEC3FF8
EC7FE049485A4990C7FCEB0FFEEB1FF8EB7FF0EBFFC000035BD80FFEC8FC485AEA7FF048
5A138048C9FC5A1270212A7BAD2C> 62 D<007FB512E015F8B612FE6C8016C03903F000
3FED0FE0ED07F01503A2ED01F8A6ED03F0A21507ED0FE0ED1FC0EDFF8090B612005D5D15
FF16C09039F0001FE0ED07F0ED03F81501ED00FCA216FE167EA616FE16FC1501ED03F815
0FED3FF0007FB612E016C0B712806CECFE0015F027337FB22C> 66
D<007FB6FCB71280A46C150021067B7D2C> 95 D<3801FFF0000713FE001F6D7E15E048
809038C01FF81407EC01FC381F80000006C77EC8127EA3ECFFFE131F90B5FC1203120F48
EB807E383FF800EA7FC090C7FC12FE5AA47E007F14FEEB8003383FE01F6CB612FC6C15FE
6C14BF0001EBFE1F3A003FF007FC27247CA32C> 97 D<EA7FF0487EA3127F1201AAEC1F
E0ECFFF801FB13FE90B6FC16809138F07FC09138801FE091380007F049EB03F85BED01FC
491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB07F0150F9138801FE09138E07F
C091B51280160001FB5B01F813F83900F03FC027337FB22C> I<903803FFE0011F13F801
7F13FE48B5FC48804848C6FCEA0FF0485A49137E4848131890C9FC5A127EA25AA8127EA2
127F6C140F6DEB1F806C7E6D133F6C6CEB7F003907FE03FF6CB55A6C5C6C6C5B011F13E0
010390C7FC21247AA32C> I<EC0FFE4A7EA380EC003FAAEB07F8EB3FFE90B512BF4814FF
5A3807FC0F380FF00348487E497E48487F90C7FC007E80A212FE5AA87E007E5CA2007F5C
6C7E5C6C6C5A380FF0073807FC1F6CB612FC6CECBFFE6C143FEB3FFC90390FF01FFC2733
7DB22C> I<EB03FE90381FFFC0017F13F048B57E48803907FE03FE390FF800FFD81FE0EB
3F805B4848EB1FC090C7120F5A007E15E015075AB7FCA416C000FCC9FC7E127EA2127F6C
EC03C06DEB07E06C7ED80FF0130F6C6CEB3FC001FF13FF000190B512806C1500013F13FC
010F13F00101138023247CA32C> I<EC0FF8EC3FFE91B5FC4914805B903807FC7F14F090
390FE03F0014C092C7FCA6007FB512FEB7FCA36C5C26000FC0C7FCB3A8003FB512F04880
A36C5C21337DB22C> I<ED03F8903907F80FFC90391FFE3FFE017FB6FC48B7FC48ECFE7F
9038FC0FF82607F003133E3A0FE001FC1CD9C0001300001F8049137EA66D13FE000F5CEB
E0016C6C485A3903FC0FF048B5FC5D481480D99FFEC7FCEB87F80180C8FCA37F6C7E90B5
12F06C14FE48ECFF804815E04815F03A3FC0001FF848C7EA03FC007E1400007C157C00FC
157E48153EA46C157E007E15FCD87F801303D83FE0EB0FF8D81FFCEB7FF06CB612E00003
15806C1500D8003F13F8010713C028387EA42C> I<EA7FF0487EA3127F1201AAEC1FE0EC
7FFC9038F9FFFE01FB7F90B6FC9138F03F80ECC01F02807FEC000F5B5BA25BB3267FFFE0
B5FCB500F11480A36C01E0140029337FB22C> I<1307EB1FC0A2497EA36D5AA20107C7FC
90C8FCA7387FFFC080B5FC7EA2EA0007B3A8007FB512FCB612FEA36C14FC1F3479B32C>
I<387FFFE0B57EA37EEA0003B3B3A5007FB61280B712C0A36C158022337BB22C> 108
D<397FF01FE039FFF87FFC9038F9FFFE01FB7F6CB6FC00019038F03F80ECC01F02807FEC
000F5B5BA25BB3267FFFE0B5FCB500F11480A36C01E0140029247FA32C> 110
D<EB07FCEB1FFF017F13C048B512F048803907FC07FC390FF001FE48486C7E0180133F00
3F158090C7121F007EEC0FC0A348EC07E0A76C140F007E15C0A2007F141F6C15806D133F
6C6CEB7F006D5B6C6C485A3907FC07FC6CB55A6C5C6C6C13C0011F90C7FCEB07FC23247C
A32C> I<397FF01FE039FFF8FFF801FB13FE90B6FC6C158000019038F07FC09138801FE0
91380007F049EB03F85BED01FC491300A216FE167EA816FE6D14FCA2ED01F86D13036DEB
07F0150F9138801FE09138E07FC091B51280160001FB5B01F813F8EC3FC091C8FCAD387F
FFE0B57EA36C5B27367FA32C> I<D87FFEEB3FC0B53801FFF0020713F8021F13FC6C5B39
003F7FE1ECFF019138FC00F84A13704A13005CA25C5CA391C8FCAF007FB512E0B67EA36C
5C26247EA32C> 114 D<90387FF8700003B512F8120F5A5A387FC00F387E00034813015A
A36CEB00F0007F140013F0383FFFC06C13FE6CEBFF80000314E0C66C13F8010113FCEB00
07EC00FE0078147F00FC143F151F7EA26C143F6D133E6D13FE9038F007FC90B5FC15F815
E000F8148039701FFC0020247AA32C> I<131E133FA9007FB6FCB71280A36C1500D8003F
C8FCB1ED03C0ED07E0A5EC800F011FEB1FC0ECE07F6DB51280160001035B6D13F8903800
3FE0232E7EAD2C> I<3A7FF003FF80486C487FA3007F7F0001EB000FB3A3151FA2153F6D
137F3900FE03FF90B7FC6D15807F6D13CF902603FE07130029247FA32C> I<D87FFFEB7F
FF6EB5FCB515806C16004A7ED807C0EB01F0A66C6C495AA3143E147FA2D801F0495AECFF
87A214F7A201F113C700005D9038F9E3CFA201FB13EFA3D97BC190C7FC017F13FFA21480
A2013F5B90381F007C29247FA32C> 119 D<3A7FFF01FFFCB5008113FE148314816C0101
13FC3A03E0000F806C7E151F6D140012005D6D133E137C017E137E013E137CA2013F13FC
6D5BA2EB0F815DA2EB07C1ECC3E0A2EB03E3ECE7C0130114F75DEB00FFA292C7FC80A214
3EA2147E147CA214FC5CA2EA0C01003F5BEA7F83EB87E0EA7E0F495A387FFF806C90C8FC
6C5A6C5AEA07E027367EA32C> 121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmr10 10 54
/Fi 54 122 df<EC0FF8EC7FFE903901F80780903907E001C090391F8000E090383F0007
017E497EA25BA2485A6F5AED018092C8FCA9ED03F0B7FCA33901F8000F1503B3AA486C49
7E267FFFE0B512C0A32A3B7FBA2E> 12 D<EC0FFC91387FFF70903901F803F0903807E0
0790381F800FEB3F00137EA25B150748481303ADB7FCA33901F80003B3AB486C497E267F
FFE0B512C0A32A3B7FBA2E> I<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485A
A2485AA212075B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA2
7F12077F1203A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20
> 40 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2
131F7FA21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C
1378A25BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20> I<15301578B3A600
7FB812F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41> 43
D<121C127FEAFF80A213C0A3127F121C1200A412011380A2120313005A1206120E5A5A5A
12600A19798817> I<B512FCA516057F941C> I<121C127FEAFF80A5EA7F00121C090979
8817> I<EB03F8EB1FFF90387E0FC09038F803E03901E000F0484813780007147C48487F
A248C77EA2481580A3007EEC0FC0A600FE15E0B3007E15C0A4007F141F6C1580A36C1500
6D5B000F143EA26C6C5B6C6C5B6C6C485A6C6C485A90387E0FC0D91FFFC7FCEB03F8233A
7DB72A> 48 D<EB01C013031307131F13FFB5FCA2131F1200B3B3A8497E007FB512F0A3
1C3879B72A> I<EB0FF0EB7FFE48B57E3903E03FE0390F000FF0000E6D7E486D7E486D7E
123000706D7E126012FCB4EC7F807FA56CC7FC121CC8FCEDFF00A34A5A5D14035D4A5A5D
140F4A5A4A5A92C7FC147C5C495A495A495A495A91C8FC011EEB01805B5B491303484814
00485A485A000EC75A000FB6FC5A5A485CB6FCA321387CB72A> I<EB07F8EB3FFF4913C0
3901F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401
A25D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F
80A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF00
6C495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A> I<15
38A2157815F8A2140114031407A2140F141F141B14331473146314C313011483EB030313
071306130C131C131813301370136013C01201EA038013005A120E120C5A123812305A12
E0B712F8A3C73803F800AB4A7E0103B512F8A325397EB82A> I<EC3FC0903801FFF00107
13FC90380FE03E90383F800790387E001F49EB3F804848137F485AA2485A000FEC3F0049
131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039FF1E07E090383801F0496C
7E01607F01E0137E497FA249148016C0151FA290C713E0A57EA56C7E16C0A2121FED3F80
7F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383FFFC06D90C7FCEB03FC233A
7DB72A> 54 D<EB03F8EB1FFF017F13C09038FC07E03903F803F048486C7E48486C7E49
137E121F48487FA2007F158090C7FCA248EC1FC0A616E0A56C143FA27F123F001F147FA2
6C6C13FF3907E001DF0003149F3801F0033900FC0F1FD93FFC13C0EB07F090C7FC153F16
80A316005D000F147E487E486C5BA24A5A4A5A49485A6C48485A001C495A260F807FC7FC
3807FFFC000113F038003FC0233A7DB72A> 57 D<121C127FEAFF80A5EA7F00121CC7FC
B2121C127FEAFF80A5EA7F00121C092479A317> I<007FB812F8B912FCA26C17F8CCFCAE
007FB812F8B912FCA26C17F836167B9F41> 61 D<EB3FE03801FFFE3907C03F80390E00
0FC0003CEB07F000301303007014F8007C130100FE14FC7EA4127E003CEB03F8C7FCEC07
F0A2EC0FE0EC1F80EC3F00147E147C5C495A5C495A5CA249C7FCA31306AA90C8FCA8130E
EB3F80497EA56D5A010EC7FC1E3B7CBA27> 63 D<1538A3157CA315FEA34A7EA34A6C7E
A202077FEC063FA2020E7FEC0C1FA2021C7FEC180FA202387FEC3007A202707FEC6003A2
02C07F1501A2D901807F81A249C77F167FA20106810107B6FCA24981010CC7121FA2496E
7EA3496E7EA3496E7EA213E0707E1201486C81D80FFC02071380B56C90B512FEA3373C7D
BB3E> 65 D<913A01FF800180020FEBE003027F13F8903A01FF807E07903A03FC000F0F
D90FF0EB039F4948EB01DFD93F80EB00FF49C8127F01FE153F12014848151F4848150FA2
48481507A2485A1703123F5B007F1601A35B00FF93C7FCAD127F6DED0180A3123F7F001F
160318006C7E5F6C7E17066C6C150E6C6C5D00001618017F15386D6C5CD91FE05C6D6CEB
03C0D903FCEB0F80902701FF803FC7FC9039007FFFFC020F13F002011380313D7BBA3C>
67 D<B712C016F816FE000190398001FF806C90C7EA3FE0EE0FF0EE03F8707E707E177F
A2EF3F8018C0171F18E0170F18F0A3EF07F8A418FCAC18F8A4EF0FF0A218E0A2171F18C0
EF3F80A2EF7F0017FE4C5A4C5AEE0FF0EE3FE0486DEBFF80B8C7FC16F816C036397DB83F
> I<B812FCA30001903880000F6C90C71201EE007E173E171E170EA31706A317078316C0
A394C7FCA31501A21503150F91B5FCA3EC000F15031501A21500A21860A318E093C712C0
A41701A3EF0380A21707A2170F173F177F486D903807FF00B9FCA333397DB839> I<B812
F8A30001903880001F6C90C71201EE00FC177C173C171CA2170CA4170E1706A2ED0180A2
1700A41503A21507151F91B5FCA3EC001F15071503A21501A692C8FCAD4813C0B612C0A3
2F397DB836> I<B648B512FEA30001902680000313006C90C76C5AB3A491B6FCA391C712
01B3A6486D497EB648B512FEA337397DB83E> 72 D<B712C016F816FE000190398001FF
806C90C7EA3FC0EE0FE0EE07F0EE03F817FC17FE1601A217FFA717FEA2EE03FCA2EE07F8
17F0EE0FE0EE3FC0923801FF0091B512FC16F091C9FCB3A5487FB6FCA330397DB839> 80
D<D90FF813C090383FFE0190B512813903F807E33907E000F74848137F4848133F48C712
1F003E140F007E1407A2007C140312FC1501A36C1400A37E6D14006C7E7F13F86CB47E6C
13F8ECFF806C14E06C14F86C14FEC680013F1480010714C0EB007F020713E0EC007FED3F
F0151F150FED07F8A200C01403A21501A37EA216F07E15036C15E06C14076C15C06C140F
6DEB1F80D8FBF0EB3F00D8F0FE13FE39E03FFFF8010F13E0D8C00190C7FC253D7CBA2E>
83 D<003FB812E0A3D9C003EB001F273E0001FE130348EE01F00078160000701770A300
601730A400E01738481718A4C71600B3B0913807FF80011FB612E0A335397DB83C> I<B5
D8FC07B5D8F001B5FCA30007902780001FFEC7EA1FF86C48C7D80FF8EC07E000010307ED
03C01B807F6C6F6C1500A26E5F017F6E6C1406A280013F4A6C5CA280011F4A6D5BEE067F
A26D6C010E6D5BEE0C3FA26D6C011C6D5BEE181FA26D6C6F5BEE300FA26D6C6F485AEE60
07A26D6C4CC7FC9338C003FCA203805D913B7F818001FE06A203C1150EDA3FC3C7EAFF0C
A203E3151CDA1FE6EC7F98A215F6DA0FFCEC3FF0A302075E4B141FA202035E4B140FA202
015E4B1407A2020093C8FC4B80503B7EB855> 87 D<EAFFF8A4EAF000B3B3B3B3A3EAFF
F8A40D5378BD17> 91 D<EAFFF8A4EA0078B3B3B3B3A3EAFFF8A40D537FBD17> 93
D<EB1FE0EBFFFC3803E03F3907000F80390F8007E0486C6C7E13E06E7EA26E7E6C5A6C5A
C8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0EA1FC0123F485A90C7FC160C12FEA314
01A26C13036CEB077C903980063E18383FC01E3A0FE0781FF03A03FFF00FE03A007F8007
C026277DA52A> 97 D<EA03F012FFA3120F1203B0EC1FE0EC7FF89038F1E03E9039F380
1F809039F7000FC001FEEB07E049EB03F049EB01F85BED00FCA216FEA2167E167FAA167E
16FEA216FC15016D14F8ED03F07F01EEEB07E001C6EB0FC09039C7801F00903881E07E90
3800FFF8C7EA1FC0283B7EB92E> I<EB03FC90381FFF8090387E03E03901F80070484813
F83907E001FC380FC003A2EA1F80123F90380001F848EB00F01500A2127E12FEAA127E12
7FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C6C13E039007C07C09038
1FFF00EB07F81F277DA525> I<ED0FC0EC03FFA3EC003F150FB0EB03F8EB1FFF90387E07
8F9038F801EF3903F0007F4848133F4848131FA24848130F123F90C7FC5AA2127E12FEAA
127E127FA27EA26C6C131FA26C6C133F6C6C137F6C6CEBEFF03A01F801CFFF39007C078F
90381FFE0FD907F813C0283B7DB92E> I<EB07F8EB1FFF90387C0FC03901F803E03903F0
01F0D807E013F8380FC0004848137CA248C7127E153E5A153F127E12FEA3B7FCA248C8FC
A5127EA2127FA26C14037F001F14076C6C13060007140E6D131CD801F013386C6C137090
387E03E090381FFF80903803FC0020277EA525> I<147E903803FF8090380FC1E0EB1F87
90383F0FF0137EA213FCA23901F803C091C7FCADB512FCA3D801F8C7FCB3AB487E387FFF
F8A31C3B7FBA19> I<ED03F090390FF00FF890393FFC3C3C9039F81F707C3901F00FE039
03E007C03A07C003E010000FECF000A248486C7EA86C6C485AA200075C6C6C485A6D485A
6D48C7FC38073FFC38060FF0000EC9FCA4120FA213C06CB512C015F86C14FE6CECFF8048
15C03A0F80007FE048C7EA0FF0003E140348140116F8481400A56C1401007C15F06CEC03
E0003F1407D80F80EB0F80D807E0EB3F003901FC01FC39007FFFF0010790C7FC26387EA5
2A> I<EA03F012FFA3120F1203B0EC0FF0EC3FFCECF03F9039F1C01F809039F3800FC0EB
F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A3293A7EB92E> I<EA0380EA0F
E0487EA56C5AEA0380C8FCAAEA03F012FFA312071203B3AA487EB512C0A312387EB717>
I<EA03F012FFA3120F1203B1913801FFFCA39138007FC01600157C15705D4A5A4A5A4AC7
FC141E1438147814FC13F1EBF3FEEBF73F01FE7FEBF81F496C7E8114076E7E6E7E811400
157E157F811680ED1FC0486CEB3FF0B500C0B5FCA3283A7EB92C> 107
D<EA03F012FFA3120F1203B3B3AD487EB512C0A3123A7EB917> I<2703F00FF0EB1FE000
FFD93FFCEB7FF8913AF03F01E07E903BF1C01F83803F3D0FF3800FC7001F802603F70013
CE01FE14DC49D907F8EB0FC0A2495CA3495CB3A3486C496CEB1FE0B500C1B50083B5FCA3
40257EA445> I<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800FC03803F700
13FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E> I<EB03FE90380FFF
8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F15C090C712074815
E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6CEB0FC0000F15806D
131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FEC7FC25277EA52A>
I<3903F01FE000FFEB7FF89038F1E07E9039F3801F803A0FF7000FC0D803FEEB07E049EB
03F04914F849130116FC150016FEA3167FAA16FEA3ED01FCA26DEB03F816F06D13076DEB
0FE001F614C09039F7803F009038F1E07E9038F0FFF8EC1FC091C8FCAB487EB512C0A328
357EA42E> I<D903F813C090381FFE0190387E07819038FC01C33903F000E30007147748
48133749133F001F141F485A150F48C7FCA312FEAA127FA37E6D131F121F6D133F120F6C
6C137F6C6C13EF3901F801CF39007E078F90381FFE0FEB07F890C7FCABED1FE00203B5FC
A328357DA42C> I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613EE
9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421> I<EBFF03000313
E7380F80FF381E003F487F487F00707F12F0A2807EA27EB490C7FCEA7FE013FF6C13E06C
13F86C7F00037FC67F01071380EB007F141F00C0EB0FC01407A26C1303A37E15806C1307
7EEC0F00B4131E38F3C07C38E1FFF038C03F801A277DA521> I<1318A51338A31378A313
F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800FC011580EB7C03017E1300
6D5AEB0FFEEB01F81A347FB220> I<D803F0EB07E000FFEB01FFA3000FEB001F00031407
B3A4150FA3151F12016D133F0000EC77F86D9038E7FF8090383F03C790381FFF87903A03
FC07E00029267EA42E> I<B538803FFEA33A0FF8000FF06C48EB07E00003EC03C06D1480
00011500A26C6C1306A26D130E017E130CA26D5BA2EC8038011F1330A26D6C5AA214E001
075BA2903803F180A3D901FBC7FCA214FF6D5AA2147CA31438A227257EA32C> I<B53A1F
FFE03FFEA3260FF8009038000FF86C48017EEB03E018C00003023EEB0180A26C6C013FEB
0300A36C6CEC8006156FA2017E9038EFC00C15C7A2D93F016D5A15830281EBF038D91F83
1430150102C3EBF87090260FC6001360A2D907E66D5A02EC137CA2D903FCEB7F804A133F
A2010192C7FC4A7FA20100141E4A130E0260130C37257EA33C> I<B538807FFFA33A03FE
003FF00001EC1F80000092C7FC017E131C6D13186D6C5AECC070010F5B6D6C5AECF180EB
03FB6DB4C8FC6D5AA2147F804A7E8114CF903801C7E090380383F090380703F8EB060149
6C7E011C137E49137F01787F496D7E486C80000FEC3FF0D8FFFE90B51280A329247FA32C
> I<B538803FFEA33A0FF8000FF06C48EB07C00003EC03806C7E16007F00001406A2017E
5BA2137F6D5BA26D6C5AA2ECC070010F1360A26D6C5AA214F101035BA2D901FBC7FCA214
FF6D5AA2147CA31438A21430A214701460A25CA2EA7C0100FE5B130391C8FC1306EAFC0E
EA701C6C5AEA1FF0EA0FC027357EA32C> I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4

%%EndSetup
%%Page: 1 1
1 0 bop Fi 515 232 a(August) 27 b(24,) g(2002) p Fh 1718
w(Board.nw) p Fi 162 w(1) p Fg 515 523 a(1) 134 b(In) l(tro) t(duction)
p Fi 515 705 a(This) 36 b(\014le) f(describ) r(es) h(and) f(implemen) n
(ts) h(v) -5 b(arious) 35 b(functionalit) n(y) h(related) f(to) h(the) g
(b) r(oard) 515 805 y(data) 27 b(structure) g(used) g(to) h(represen) n
(t) e(the) i(b) r(oard) f(in) h(the) g(bagc) n(hal) e(engine.) 639
904 y(A) h(b) r(oard) e(in) h(the) h(bagc) n(hal) d(game) i(is) f(supp)
r(osed) h(to) g(represen) n(t) f(the) i(state) e(of) h(the) h(game) 515
1004 y(at) 35 b(an) g(instan) n(t) g(of) h(time.) 61
b(The) 35 b(follo) n(wing) f(are) h(the) h(comp) r(onen) n(ts) f(that) g
(determine) h(the) 515 1103 y(state) 27 b(of) h(the) g(game:) p
Ff 639 1286 a(\017) p Fi 41 w(Whose) g(turn) f(is) h(it?) p
Ff 639 1452 a(\017) p Fi 41 w(The) g(n) n(um) n(b) r(er) f(of) h(shik)
-5 b(aar) 26 b(still) i(left) g(to) g(b) r(e) g(pla) n(y) n(es.) p
Ff 639 1618 a(\017) p Fi 41 w(The) g(n) n(um) n(b) r(er) f(of) h(shik)
-5 b(aar) 26 b(that) i(ha) n(v) n(e) e(already) h(b) r(een) h(killed.) p
Ff 639 1784 a(\017) p Fi 41 w(The) 35 b(piece) g(on) f(eac) n(h) g(p) r
(osition) g(on) h(the) g(b) r(oard.) 57 b(i.e.) h(Do) r(es) 35
b(the) g(p) r(osition) f(\(x,) j(y\)) 722 1884 y(con) n(tain) 27
b(a) g(tiger,) g(or) g(a) g(shik) -5 b(aar,) 27 b(or) f(is) i(it) g
(empt) n(y?) 639 2066 y(While) 21 b(w) n(e) f(could) h(use) f(a) g
(C-st) n(yle) g(structure) g(to) g(enco) r(de) h(suc) n(h) f(a) g(data)
g(structure,) h(exp) r(e-) 515 2166 y(rience) i(with) h(c) n(hess) f
(suggests) g(that) h(w) n(e) f(use) h(a) f(bit-b) r(oard) g(instead) h
(\(see) f(next) h(paragraph\).) 515 2266 y(The) 30 b(bit-b) r(oard) f
(is) g(more) g(\015exible) h(b) r(ecause) f(it) i(acts) e(as) g(a) g
(hash) h(function) g(itself,) h(in) f(case) 515 2365
y(w) n(e) i(need) g(indexing) g(with) g(the) h(b) r(oard.) 50
b(Additionally) 32 b(manipulating) g(the) g(bit) h(b) r(oard) e(is) 515
2465 y(faster.) 639 2565 y(Here) 41 b(w) n(e) f(are) g(refering) f(to) i
(the) p Fe 41 w(bit-b) l(o) l(ar) l(d) p Fi 42 w(as) f(a) g
(data-structure) f(that) i(is) g(a) f(plain) 515 2664
y(in) n(teger.) 51 b(The) 33 b(in) n(teger) f(is) h(in) n(tepreted) f
(according) f(to) i(the) g(v) -5 b(alue) 33 b(of) f(the) i(individual) f
(bit) 515 2764 y(p) r(ositions) 27 b(in) h(its) g(binary) e(represen) n
(tation.) 639 2863 y(W) -7 b(e) 42 b(will) f(use) g(a) g(64-bit) f(in) n
(teger) h(\(althogh) f(w) n(e) h(do) g(not) g(require) f(all) h(the) g
(bits\)) h(to) 515 2963 y(represen) n(t) 26 b(the) i(b) r(oard.) 36
b(The) 28 b(64-bit) f(in) n(teger) f(is) i(de\014ned) g(in) p
Fh 28 w(types.h) p Fi(.) 34 b(See) 27 b(t) n(yp) r(es.n) n(w.) p
Ff 515 3104 a(h) p Fe(*) p Ff 12 w(i) q(\021) 685 3204
y(h) p Fe(b) l(o) l(ar) l(d.h) p Ff 6 w(i) 515 3486 y(h) p
Fe(b) l(o) l(ar) l(d.h) p Ff 6 w(i) r(\021) p Fh 598
3685 a(#ifndef) 40 b(bagchal_engine_bo) o(ard) o(_h) 598
3785 y(#define) g(bagchal_engine_bo) o(ard) o(_h) p Ff
598 3984 a(h) p Fe(includes) p Ff 7 w(i) 598 4184 y(h) p
Fe(Bo) l(ar) l(d) 31 b(typ) l(e) f(de\014nition) p Ff
6 w(i) 598 4383 y(h) p Fe(function) g(pr) l(ototyp) l(es) p
Ff 7 w(i) p Fh 598 4582 a(#endif) p 90 rotate dyy eop
%%Page: 2 2
2 1 bop Fi 515 232 a(August) 27 b(24,) g(2002) p Fh 1718
w(Board.nw) p Fi 162 w(2) p Fh 515 523 a(types.h) p Fi
25 w(is) g(included) h(for) p Fh 27 w(i64) p 1527 523
27 4 v 30 w(t) p Fi(,) g(the) g(64) e(bit) i(in) n(teger.) p
Ff 515 664 a(h) p Fe(includes) p Ff 7 w(i) q(\021) p
Fh 598 863 a(#include) 40 b(<types.h>) p Fg 515 1279
a(2) 134 b(The) 45 b(bit-b) t(oard) p Fi 515 1461 a(The) 27
b(bit-b) r(oard) g(has) g(4) h(parts.) 639 1561 y(The) 37
b(\014rst) f(part) g(\(bits) i(0) e([lsb) p Fd 1595 1530
a(1) p Fi 1632 1561 a(]) h(to) f(bit) h(49\)) f(is) h(for) f(the) h
(state) f(of) h(eac) n(h) e(p) r(osition) i(in) 515 1660
y(the) d(b) r(orad.) 57 b(These) 34 b(are) f(divided) i(in) n(to) f
(pairs) f(of) i(bits.) 57 b(Eac) n(h) 33 b(pair) h(describ) r(es) g(a) g
(single) 515 1760 y(p) r(osition.) 42 b(\(00) 29 b(=) g(empt) n(y) -7
b(,) 30 b(01) f(=) g(tiger,) g(10) f(=) i(shik) -5 b(aar,) 28
b(11) h(=) p Fe 29 w(unde\014ne) l(d) p Fi(\)) g(See) h(\014gure) e(1.)
515 1859 y(P) n(osition) c(\(0) p Fc(;) p Fi 14 w(0\)) h(is) g
(de\014ned) h(b) n(y) f(bits) h(0) f(and) g(1.) 36 b(P) n(osition) 24
b(\(0) p Fc(;) p Fi 14 w(1\)) h(is) g(de\014end) h(b) n(y) f(bits) h(2)
f(and) 515 1959 y(3.) 36 b(P) n(osition) 26 b(\() p Fc(x;) 14
b(y) p Fi 3 w(\)) 29 b(is) e(de\014ned) h(b) n(y) f(bits) p
Fc 1014 2162 a(b) p Fi(1) 22 b(=) g(2) p Fc(x) p Fi 19
w(+) c(10) p Fc(y) s(;) 40 b(b) p Fi(2) 22 b(=) h(2) p
Fc(x) p Fi 18 w(+) p Fc 18 w(y) p Fi 21 w(+) 18 b(1) p
Fc(;) 42 b(x;) 14 b(y) p Ff 26 w(2) 23 b(f) p Fi(0) p
Fc(;) p Fi 14 w(1) p Fc(;) p Fi 14 w(2) p Fc(;) p Fi
14 w(3) p Fc(;) p Fi 14 w(4) p Ff(g) p 515 4929 1146
4 v Fb 607 4983 a(1) p Fa 642 5006 a(least) h(signi\014can) n(t) g(bit)
p 90 rotate dyy eop
%%Page: 3 3
3 2 bop Fi 515 232 a(August) 27 b(24,) g(2002) p Fh 1718
w(Board.nw) p Fi 162 w(3) 515 3737 y @beginspecial 0
@llx 0 @lly 689 @urx 668 @ury 2756 @rwi @setspecial
%%BeginDocument: Board.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: /home/jaa/projects/personal/bagchal/src/engine/Board.dia
%%Creator: Dia v0.88.1
%%CreationDate: Sat May 11 15:42:18 2002
%%For: a user
%%Magnification: 1.0000
%%Orientation: Portrait
%%BoundingBox: 0 0 689 668
%%Pages: 1
%%BeginSetup
%%EndSetup
%%EndComments
%%BeginProlog
[ /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quoteright
/parenleft /parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E
/F /G /H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W /X /Y
/Z /bracketleft /backslash /bracketright /asciicircum /underscore /quoteleft /a /b /c
/d /e /f /g /h /i /j /k /l /m
/n /o /p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section /dieresis /copyright
/ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron /degree /plusminus /twosuperior /threesuperior
/acute /mu /paragraph /periodcentered /cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf
/threequarters /questiondown /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis /Eth /Ntilde
/Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply /Oslash /Ugrave /Uacute /Ucircumflex
/Udieresis /Yacute /Thorn /germandbls /agrave /aacute /acircumflex /atilde /adieresis /aring
/ae /ccedilla /egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide /oslash /ugrave
/uacute /ucircumflex /udieresis /yacute /thorn /ydieresis] /isolatin1encoding exch def
/Times-Roman-latin1
    /Times-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Italic-latin1
    /Times-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-Bold-latin1
    /Times-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Times-BoldItalic-latin1
    /Times-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Book-latin1
    /AvantGarde-Book findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-BookOblique-latin1
    /AvantGarde-BookOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-Demi-latin1
    /AvantGarde-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/AvantGarde-DemiOblique-latin1
    /AvantGarde-DemiOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Light-latin1
    /Bookman-Light findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-LightItalic-latin1
    /Bookman-LightItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-Demi-latin1
    /Bookman-Demi findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Bookman-DemiItalic-latin1
    /Bookman-DemiItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-latin1
    /Courier findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Oblique-latin1
    /Courier-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-Bold-latin1
    /Courier-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Courier-BoldOblique-latin1
    /Courier-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-latin1
    /Helvetica findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Oblique-latin1
    /Helvetica-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Bold-latin1
    /Helvetica-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-BoldOblique-latin1
    /Helvetica-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-latin1
    /Helvetica-Narrow findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Oblique-latin1
    /Helvetica-Narrow-Oblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-Bold-latin1
    /Helvetica-Narrow-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Helvetica-Narrow-BoldOblique-latin1
    /Helvetica-Narrow-BoldOblique findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Roman-latin1
    /NewCenturySchoolbook-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Italic-latin1
    /NewCenturySchoolbook-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-Bold-latin1
    /NewCenturySchoolbook-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/NewCenturySchoolbook-BoldItalic-latin1
    /NewCenturySchoolbook-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Roman-latin1
    /Palatino-Roman findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Italic-latin1
    /Palatino-Italic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-Bold-latin1
    /Palatino-Bold findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Palatino-BoldItalic-latin1
    /Palatino-BoldItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/Symbol-latin1
    /Symbol findfont
definefont pop
/ZapfChancery-MediumItalic-latin1
    /ZapfChancery-MediumItalic findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/ZapfDingbats-latin1
    /ZapfDingbats findfont
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding isolatin1encoding def
    currentdict end
definefont pop
/cp {closepath} bind def
/c {curveto} bind def
/f {fill} bind def
/a {arc} bind def
/ef {eofill} bind def
/ex {exch} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth pop} bind def
/tr {translate} bind def

/ellipsedict 8 dict def
ellipsedict /mtrx matrix put
/ellipse
{ ellipsedict begin
   /endangle exch def
   /startangle exch def
   /yrad exch def
   /xrad exch def
   /y exch def
   /x exch def   /savematrix mtrx currentmatrix def
   x y tr xrad yrad sc
   0 0 1 startangle endangle arc
   savematrix setmatrix
   end
} def

/mergeprocs {
dup length
3 -1 roll
dup
length
dup
5 1 roll
3 -1 roll
add
array cvx
dup
3 -1 roll
0 exch
putinterval
dup
4 2 roll
putinterval
} bind def
28.346000 -28.346000 scale
-2.998000 -29.314584 translate
%%EndProlog


1.000000 1.000000 1.000000 srgb
n 7.350000 6.300000 m 7.350000 25.500000 l 27.050000 25.500000 l 27.050000 6.300000 l f
0.100000 slw
[] 0 sd
[] 0 sd
0 slj
0.000000 0.000000 0.000000 srgb
n 7.350000 6.300000 m 7.350000 25.500000 l 27.050000 25.500000 l 27.050000 6.300000 l cp s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 7.350000 6.300000 m 27.050000 25.500000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 27.050000 6.300000 m 7.350000 25.500000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 17.200000 6.300000 m 17.200000 25.500000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 7.350000 15.900000 m 27.050000 15.900000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 7.350000 15.900000 m 17.200000 25.500000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 17.200000 25.500000 m 27.050000 15.900000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 27.050000 15.900000 m 17.200000 6.300000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 17.200000 6.300000 m 7.350000 15.900000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 12.300000 6.250000 m 12.250000 25.500000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 22.100000 6.250000 m 22.100000 25.500000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 7.350000 20.700000 m 27.000000 20.650000 l s
0.100000 slw
[] 0 sd
[] 0 sd
0 slc
n 7.400000 11.150000 m 27.000000 10.950000 l s
/Courier-latin1 ff 0.800000 scf sf
() dup sw 2 div 7.000000 ex sub 26.250000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(0) dup sw 2 div 6.900000 ex sub 26.650000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(1) dup sw 2 div 12.150000 ex sub 26.700000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(2) dup sw 2 div 17.000000 ex sub 26.750000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(3) dup sw 2 div 21.950000 ex sub 26.800000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(4) dup sw 2 div 26.800000 ex sub 26.800000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(1) dup sw 2 div 6.350000 ex sub 20.950000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(2) dup sw 2 div 6.400000 ex sub 16.150000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(3) dup sw 2 div 6.200000 ex sub 11.500000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(4) dup sw 2 div 6.250000 ex sub 6.450000 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(x) dup sw 2 div 20.200000 ex sub 29.209274 m gs 1 -1 sc sh gr
/Courier-latin1 ff 0.800000 scf sf
(y) dup sw 2 div 3.500000 ex sub 15.309274 m gs 1 -1 sc sh gr
0.090000 slw
[] 0 sd
[] 0 sd
0 slc
n 4.450000 22.259274 m 4.450000 12.359274 l s
0 slj
n 4.700000 12.859274 m 4.450000 12.359274 l 4.200000 12.859274 l f
0.090000 slw
[] 0 sd
[] 0 sd
0 slc
n 12.850000 28.409274 m 23.650000 28.409274 l s
0 slj
n 23.150000 28.659274 m 23.650000 28.409274 l 23.150000 28.159274 l f
showpage

%%EndDocument
@endspecial 969 3920 a(Figure) g(1:) 37 b(The) 27 b(empt) n(y) h(bagc) n
(hal) e(b) r(oard) h(with) h(co-ordinates) p 90 rotate
dyy eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
